openapi: "3.1.0"
info:
  title: "apps API"
  description: "apps API"
  version: "1.0.0"
servers:
  - url: "http://127.0.0.1:8443"
paths:
  /api/auth/signin:
    post:
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Signin"
        required: true
      responses:
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    code: 1
                    message: "null"
                    fields: "null"
                Example#2:
                  description: ""
                  value:
                    code: 1000
                    message: "null"
                    fields: [ ]
                Example#3:
                  description: ""
                  value:
                    code: 1
                    message: "null"
                    fields: "null"
                Example#4:
                  description: ""
                  value:
                    code: 1000
                    message: "null"
                    fields: [ ]
                Example#5:
                  description: ""
                  value:
                    code: 1
                    message: "null"
                    fields: "null"
                Example#6:
                  description: ""
                  value:
                    code: 1000
                    message: "null"
                    fields: [ ]
                Example#7:
                  description: ""
                  value:
                    code: 1
                    message: "null"
                    fields: "null"
                Example#8:
                  description: ""
                  value:
                    code: 1000
                    message: "null"
                    fields: [ ]
                Example#9:
                  description: ""
                  value:
                    code: 1
                    message: "null"
                    fields: "null"
                Example#10:
                  description: ""
                  value:
                    code: 1000
                    message: "null"
                    fields: [ ]
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /api/auth/signup:
    post:
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignUp"
        required: true
      responses:
        "500":
          description: "Internal Server Error"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                Example#1:
                  description: ""
                  value:
                    code: 1
                    message: "null"
                    fields: "null"
                Example#2:
                  description: ""
                  value:
                    code: 1000
                    message: "null"
                    fields: [ ]
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "object"
  /api/me:
    get:
      description: ""
      parameters:
        - name: "redirect"
          in: "query"
          required: false
          schema:
            type: "string"
      responses:
        "302":
          description: "Found <br> Redirect"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "/login"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/User"
  /api/user:
    get:
      description: ""
      parameters:
        - name: "username"
          in: "query"
          required: false
          schema:
            type: "string"
        - name: "userId"
          in: "query"
          required: false
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                $ref: "#/components/schemas/User"
  /api/user/channels:
    get:
      description: ""
      parameters:
        - name: "username"
          in: "query"
          required: false
          schema:
            type: "string"
        - name: "userId"
          in: "query"
          required: false
          schema:
            type: "string"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/UserChannel"
  /api/channels:
    get:
      description: ""
      parameters:
        - name: "userChannelId"
          in: "query"
          required: false
          schema:
            type: "number"
        - name: "userChannelName"
          in: "query"
          required: false
          schema:
            type: "string"
components:
  schemas:
    ArgumentErrorMessage:
      type: "object"
      properties:
        field:
          type: "string"
        message:
          type: "string"
          nullable: true
      required:
        - "field"
    ErrorResponse:
      type: "object"
      properties:
        code:
          type: "integer"
          format: "int32"
        message:
          type: "string"
          nullable: true
        fields:
          type: "array"
          nullable: true
          items:
            $ref: "#/components/schemas/ArgumentErrorMessage"
      required:
        - "code"
    Signin:
      type: "object"
      properties:
        username:
          type: "string"
        password:
          type: "string"
        neverExpire:
          type: "boolean"
          nullable: true
      required:
        - "username"
        - "password"
    SignUp:
      type: "object"
      properties:
        username:
          type: "string"
        password:
          type: "string"
      required:
        - "username"
        - "password"
    User:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        version:
          type: "integer"
          format: "int32"
          default: "0"
        username:
          type: "string"
        status:
          type: "string"
          enum:
            - "NORMAL"
            - "ARCHIVED"
        role:
          type: "string"
          enum:
            - "ROLE_UNSPECIFIED"
            - "HOST"
            - "ADMIN"
            - "USER"
        email:
          type: "string"
          nullable: true
        nickname:
          type: "string"
        avatarUrl:
          type: "string"
          nullable: true
      required:
        - "id"
        - "version"
        - "username"
        - "status"
        - "role"
        - "nickname"
    UserChannel:
      type: "object"
      properties:
        uid:
          type: "integer"
          format: "int64"
        ownerUser:
          type: "integer"
          format: "int64"
        description:
          type: "string"
          nullable: true
        rowStatus:
          type: "string"
          nullable: true
          enum:
            - "NORMAL"
            - "ARCHIVED"
        name:
          type: "string"
        isDefaultChannel:
          type: "boolean"
      required:
        - "uid"
        - "ownerUser"
        - "name"
        - "isDefaultChannel"
