openapi: "3.1.0"
info:
  title: "spring_mono API"
  description: "spring_mono API"
  version: "1.0.0"
servers:
  - url: "http://127.0.0.1:8443"
paths:
  /api/auth/signOut:
    post:
      description: ""
  /api/auth/signin:
    post:
      description: ""
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/SignIn"
        required: true
      responses:
        "302":
          description: "Found <br> call.respond(HttpStatusCode.OK, buildJwtTokens(signedUser))"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "/"
  /api/auth/signup:
    post:
      description: ""
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/SignUp"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthTokens"
  /api/user/me:
    get:
      description: ""
      responses:
        "302":
          description: "Found <br> Redirect"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "/login"
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/User"
components:
  schemas:
    SignIn:
      type: "object"
      properties:
        username:
          type: "string"
        password:
          type: "string"
        neverExpire:
          type: "boolean"
          nullable: true
      required:
        - "username"
        - "password"
    SignUp:
      type: "object"
      properties:
        username:
          type: "string"
        password:
          type: "string"
      required:
        - "username"
        - "password"
    AuthTokens:
      type: "object"
      properties: { }
    User:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        version:
          type: "integer"
          format: "int32"
          default: "0"
        createdAt:
          type: "string"
          format: "date-time"
          nullable: true
        updatedAt:
          type: "string"
          format: "date-time"
          nullable: true
        username:
          type: "string"
        hashedPassword:
          type: "array"
          nullable: true
          items:
            type: "string"
            format: "byte"
        status:
          type: "string"
          enum:
            - "NORMAL"
            - "ARCHIVED"
        role:
          type: "string"
          enum:
            - "ROLE_UNSPECIFIED"
            - "HOST"
            - "ADMIN"
            - "USER"
        email:
          type: "string"
          nullable: true
        nickname:
          type: "string"
        avatarUrl:
          type: "string"
          nullable: true
      required:
        - "id"
        - "version"
        - "username"
        - "status"
        - "role"
        - "nickname"
